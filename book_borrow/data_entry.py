import random

from book_borrow.constant import BOOK_TYPE
from book_borrow.models import Book, Author

book_data = [
    {'author': 'Chinua Achebe', 'name': 'Things Fall Apart'},
    {'author': 'Hans Christian Andersen', 'name': 'Fairy tales'},
    {'author': 'Dante Alighieri', 'name': 'The Divine Comedy'},
    {'author': 'Unknown', 'name': 'The Epic Of Gilgamesh'},
    {'author': 'Unknown', 'name': 'The Book Of Job'},
    {'author': 'Unknown', 'name': 'One Thousand and One Nights'},
    {'author': 'Unknown', 'name': "Njál's Saga"},
    {'author': 'Jane Austen', 'name': 'Pride and Prejudice'},
    {'author': 'Honoré de Balzac', 'name': 'Le Père Goriot'},
    {'author': 'Samuel Beckett',
     'name': 'Molloy, Malone Dies, The Unnamable, the trilogy'},
    {'author': 'Giovanni Boccaccio', 'name': 'The Decameron'},
    {'author': 'Jorge Luis Borges', 'name': 'Ficciones'},
    {'author': 'Emily Brontë', 'name': 'Wuthering Heights'},
    {'author': 'Albert Camus', 'name': 'The Stranger'},
    {'author': 'Paul Celan', 'name': 'Poems'},
    {'author': 'Louis-Ferdinand Céline',
     'name': 'Journey to the End of the Night'},
    {'author': 'Miguel de Cervantes', 'name': 'Don Quijote De La Mancha'},
    {'author': 'Geoffrey Chaucer', 'name': 'The Canterbury Tales'},
    {'author': 'Anton Chekhov', 'name': 'Stories'},
    {'author': 'Joseph Conrad', 'name': 'Nostromo'},
    {'author': 'Charles Dickens', 'name': 'Great Expectations'},
    {'author': 'Denis Diderot', 'name': 'Jacques the Fatalist'},
    {'author': 'Alfred Döblin', 'name': 'Berlin Alexanderplatz'},
    {'author': 'Fyodor Dostoevsky', 'name': 'Crime and Punishment'},
    {'author': 'Fyodor Dostoevsky', 'name': 'The Idiot'},
    {'author': 'Fyodor Dostoevsky', 'name': 'The Possessed'},
    {'author': 'Fyodor Dostoevsky', 'name': 'The Brothers Karamazov'},
    {'author': 'George Eliot', 'name': 'Middlemarch'},
    {'author': 'Ralph Ellison', 'name': 'Invisible Man'},
    {'author': 'Euripides', 'name': 'Medea'},
    {'author': 'William Faulkner', 'name': 'Absalom, Absalom!'},
    {'author': 'William Faulkner', 'name': 'The Sound and the Fury'},
    {'author': 'Gustave Flaubert', 'name': 'Madame Bovary'},
    {'author': 'Gustave Flaubert', 'name': 'Sentimental Education'},
    {'author': 'Federico García Lorca', 'name': 'Gypsy Ballads'},
    {'author': 'Gabriel García Márquez', 'name': 'One Hundred Years of Solitude'},
    {'author': 'Gabriel García Márquez', 'name': 'Love in the Time of Cholera'},
    {'author': 'Johann Wolfgang von Goethe', 'name': 'Faust'},
    {'author': 'Nikolai Gogol', 'name': 'Dead Souls'},
    {'author': 'Günter Grass', 'name': 'The Tin Drum'},
    {'author': 'João Guimarães Rosa',
     'name': 'The Devil to Pay in the Backlands'},
    {'author': 'Knut Hamsun', 'name': 'Hunger'},
    {'author': 'Ernest Hemingway', 'name': 'The Old Man and the Sea'},
    {'author': 'Homer', 'name': 'Iliad'},
    {'author': 'Homer', 'name': 'Odyssey'},
    {'author': 'Henrik Ibsen', 'name': "A Doll's House"},
    {'author': 'James Joyce', 'name': 'Ulysses'},
    {'author': 'Franz Kafka', 'name': 'Stories'},
    {'author': 'Franz Kafka', 'name': 'The Trial'},
    {'author': 'Franz Kafka', 'name': 'The Castle'},
    {'author': 'Kālidāsa', 'name': 'The recognition of Shakuntala'},
    {'author': 'Yasunari Kawabata', 'name': 'The Sound of the Mountain'},
    {'author': 'Nikos Kazantzakis', 'name': 'Zorba the Greek'},
    {'author': 'D. H. Lawrence', 'name': 'Sons and Lovers'},
    {'author': 'Halldór Laxness', 'name': 'Independent People'},
    {'author': 'Giacomo Leopardi', 'name': 'Poems'},
    {'author': 'Doris Lessing', 'name': 'The Golden Notebook'},
    {'author': 'Astrid Lindgren', 'name': 'Pippi Longstocking'},
    {'author': 'Lu Xun', 'name': 'Diary of a Madman'},
    {'author': 'Naguib Mahfouz', 'name': 'Children of Gebelawi'},
    {'author': 'Thomas Mann', 'name': 'Buddenbrooks'},
    {'author': 'Thomas Mann', 'name': 'The Magic Mountain'},
    {'author': 'Herman Melville', 'name': 'Moby Dick'},
    {'author': 'Michel de Montaigne', 'name': 'Essays'},
    {'author': 'Elsa Morante', 'name': 'History'},
    {'author': 'Toni Morrison', 'name': 'Beloved'},
    {'author': 'Murasaki Shikibu', 'name': 'The Tale of Genji'},
    {'author': 'Robert Musil', 'name': 'The Man Without Qualities'},
    {'author': 'Vladimir Nabokov', 'name': 'Lolita'},
    {'author': 'George Orwell', 'name': 'Nineteen Eighty-Four'},
    {'author': 'Ovid', 'name': 'Metamorphoses'},
    {'author': 'Fernando Pessoa', 'name': 'The Book of Disquiet'},
    {'author': 'Edgar Allan Poe', 'name': 'Tales'},
    {'author': 'Marcel Proust', 'name': 'In Search of Lost Time'},
    {'author': 'François Rabelais', 'name': 'Gargantua and Pantagruel'},
    {'author': 'Juan Rulfo', 'name': 'Pedro Páramo'},
    {'author': 'Rumi', 'name': 'The Masnavi'},
    {'author': 'Salman Rushdie', 'name': "Midnight's Children"},
    {'author': 'Saadi', 'name': 'Bostan'},
    {'author': 'Tayeb Salih', 'name': 'Season of Migration to the North'},
    {'author': 'José Saramago', 'name': 'Blindness'},
    {'author': 'William Shakespeare', 'name': 'Hamlet'},
    {'author': 'William Shakespeare', 'name': 'King Lear'},
    {'author': 'William Shakespeare', 'name': 'Othello'},
    {'author': 'Sophocles', 'name': 'Oedipus the King'},
    {'author': 'Stendhal', 'name': 'The Red and the Black'},
    {'author': 'Laurence Sterne',
     'name': 'The Life And Opinions of Tristram Shandy'},
    {'author': 'Italo Svevo', 'name': 'Confessions of Zeno'},
    {'author': 'Jonathan Swift', 'name': "Gulliver's Travels"},
    {'author': 'Leo Tolstoy', 'name': 'War and Peace'},
    {'author': 'Leo Tolstoy', 'name': 'Anna Karenina'},
    {'author': 'Leo Tolstoy', 'name': 'The Death of Ivan Ilyich'},
    {'author': 'Mark Twain', 'name': 'The Adventures of Huckleberry Finn'},
    {'author': 'Valmiki', 'name': 'Ramayana'},
    {'author': 'Virgil', 'name': 'The Aeneid'},
    {'author': 'Vyasa', 'name': 'Mahabharata'},
    {'author': 'Walt Whitman', 'name': 'Leaves of Grass'},
    {'author': 'Virginia Woolf', 'name': 'Mrs Dalloway'},
    {'author': 'Virginia Woolf', 'name': 'To the Lighthouse'},
    {'author': 'Marguerite Yourcenar', 'name': 'Memoirs of Hadrian'}]

users = ['Aaberg', 'Aara',
         'Aalst',
         'Aaren',
         'Aarika',
         'Aaron',
         'Aaronson',
         'Ab',
         'Aba',
         'Abad',
         'Abagael',
         'Abagail',
         'Abana',
         'Abate',
         'Abba',
         'Abbate',
         'Abbe',
         'Abbey',
         'Abbi',
         'Abbie',
         'Abbot',
         'Abbotsen',
         'Abbotson',
         'Abbotsun',
         'Abbott',
         'Abbottson',
         'Abby',
         'Abbye',
         'Abdel',
         'Abdella',
         'Abdu',
         'Abdul',
         'Abdulla',
         'Abe',
         'Abebi',
         'Abel',
         'Abelard',
         'Abell',
         'Abercromby',
         'Abernathy',
         'Abernon',
         'Abert',
         'Abeu',
         'Abey',
         'Abie',
         'Abigael',
         'Abigail',
         'Abigale',
         'Abijah',
         'Abisha',
         'Abisia',
         'Abixah',
         'Abner',
         'Aborn',
         'Abott',
         'Abra',
         'Abraham',
         'Abrahams',
         'Abrahamsen',
         'Abrahan',
         'Abram',
         'Abramo',
         'Abrams',
         'Abramson',
         'Abran',
         'Abroms',
         'Absa',
         'Absalom',
         'Abshier',
         'Acacia',
         'Acalia',
         'Accalia',
         'Ace',
         'Acey']


def add_users():
    from django.contrib.auth.models import User
    for user_name in users:
        user = User.objects.create(username=user_name)
        user.set_password(user_name + "@123")
        user.save()


def get_temporary_user():
    from django.contrib.auth.models import User
    user, created = User.objects.get_or_create(username=users[0])
    if created:
        user.set_password(users[0] + "@123")
        user.save()
    return user


def add_books():
    for book in book_data:
        author = Author.objects.create(name=book['author'])
        random_type = random.randint(0, 2)
        Book.objects.create(author=author, name=book['name'], type=BOOK_TYPE[random_type])